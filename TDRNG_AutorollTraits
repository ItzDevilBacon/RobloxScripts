local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local RollService = ReplicatedStorage:WaitForChild("_NetworkServiceContainer"):WaitForChild("RollService")

local activeUUID = nil
local rolling = false
local screenGui

-- üîπ Function to Create a Modern Draggable UI
local function createUI()
    if screenGui then screenGui:Destroy() end  -- Remove old GUI if it exists

    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RollingControlGUI"
    screenGui.Parent = game:GetService("CoreGui")
    screenGui.ResetOnSpawn = false

    -- üî≤ Main UI Frame (Outside Box)
    local mainFrame = Instance.new("Frame")
    mainFrame.Parent = screenGui
    mainFrame.Size = UDim2.new(0.2, 0, 0.15, 0)
    mainFrame.Position = UDim2.new(0.4, 0, 0.3, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BackgroundTransparency = 0.2
    mainFrame.BorderSizePixel = 0

    -- ‚ú® UI Effects
    local UICorner = Instance.new("UICorner", mainFrame)
    UICorner.CornerRadius = UDim.new(0.1, 0)

    local UIStroke = Instance.new("UIStroke", mainFrame)
    UIStroke.Thickness = 3
    UIStroke.Color = Color3.fromRGB(200, 200, 200)

    -- üü¢ Rolling Button
    local rollButton = Instance.new("TextButton")
    rollButton.Parent = mainFrame
    rollButton.Size = UDim2.new(0.8, 0, 0.3, 0)
    rollButton.Position = UDim2.new(0.1, 0, 0.2, 0)
    rollButton.Text = "Start Rolling"
    rollButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    rollButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    rollButton.TextScaled = true
    rollButton.Font = Enum.Font.SourceSansBold
    rollButton.AutoButtonColor = false

    local rollUICorner = Instance.new("UICorner", rollButton)
    rollUICorner.CornerRadius = UDim.new(0.5, 0)

    -- ‚ùå Destroy Button
    local destroyButton = Instance.new("TextButton")
    destroyButton.Parent = mainFrame
    destroyButton.Size = UDim2.new(0.8, 0, 0.3, 0)
    destroyButton.Position = UDim2.new(0.1, 0, 0.6, 0)
    destroyButton.Text = "Destroy GUI"
    destroyButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    destroyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    destroyButton.TextScaled = true
    destroyButton.Font = Enum.Font.SourceSansBold
    destroyButton.AutoButtonColor = false

    local destroyUICorner = Instance.new("UICorner", destroyButton)
    destroyUICorner.CornerRadius = UDim.new(0.5, 0)

    -- üèó Smooth Dragging System
    local dragging, dragStart, startPos

    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            TweenService:Create(
                mainFrame,
                TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
                {Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)}
            ):Play()
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- üéØ Toggle Rolling
    rollButton.MouseButton1Click:Connect(function()
        rolling = not rolling
        rollButton.Text = rolling and "Stop Rolling" or "Start Rolling"
        print(rolling and "Rolling started." or "Rolling stopped.")

        if rolling and activeUUID then
            task.spawn(attemptRoll, activeUUID) -- Start rolling instantly
        else
            task.wait(1) -- Auto-reset after stopping
            rolling = false
            activeUUID = nil
            print("Rolling auto-reset complete.")
        end
    end)

    -- üö´ Destroy GUI
    destroyButton.MouseButton1Click:Connect(function()
        rolling = false
        if screenGui then
            screenGui:Destroy()
            screenGui = nil
        end
        print("GUI Destroyed. Rolling stopped.")
    end)
end

-- üìå Function to Attempt Rolling
local function attemptRoll(uuid)
    if rolling and uuid then
        RollService:FireServer("attemptTraitRoll", uuid)
        print("Attempting roll with UUID:", uuid)
    end
end

-- üéØ Event Listener for Roll Results
RollService.OnClientEvent:Connect(function(...)
    local args = {...}
    print("RollService event received.")

    -- Capture UUID if not already set
    if not activeUUID and args[2] and type(args[2]) == "string" then
        activeUUID = args[2]
        print("Captured UUID:", activeUUID)
        if rolling then
            task.spawn(attemptRoll, activeUUID) -- Roll instantly if rolling is active
        end
    end

    -- Detect Successful Trait Roll
    if args[1] == "traitRollSuccess" then
        print("Trait successfully rolled! Stopping auto-roll.")
        rolling = false
        if screenGui then
            local rollButton = screenGui:FindFirstChildOfClass("TextButton")
            if rollButton then rollButton.Text = "Start Rolling" end
        end
    elseif rolling then
        task.spawn(attemptRoll, activeUUID) -- Keep rolling if no success
    end
end)

-- ‚úÖ Initialize UI
createUI()
